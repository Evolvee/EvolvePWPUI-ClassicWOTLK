<Ui xmlns="http://www.blizzard.com/wow/ui" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<!--Autogenerated by wowuides, Version=1.0.300.0, Culture=neutral, PublicKeyToken=null-->
	<Script file="UILibToolbar.lua"/>
	
	<Frame name="BFToolbar" parent="BFConfigureLayer" enablemouse="true" movable="true">
		<!--<FrameSkin skinid="dcb143e1-a4ab-4e7c-b934-1efa40101d21" frameid="2d508883-59c2-4f83-ae10-27aaad48391b" />-->
		<KeyValues>
			<KeyValue key="backdropInfo" value="BACKDROP_DIALOG_32_32" type="global"/>
		</KeyValues>
		<Scripts>
			<OnMouseDown>
				self:StartMoving();
			</OnMouseDown>
			<OnMouseUp>
				self:StopMovingOrSizing();
			</OnMouseUp>
		</Scripts>
		<Size>
			<AbsDimension x="216" y="88" />
		</Size>
		<Anchors>
			<Anchor point="CENTER" relativeTo="UIParent">
				<Offset>
					<AbsDimension x="0" y="0" />
				</Offset>
			</Anchor>
		</Anchors>
		<Backdrop bgFile="Interface\DialogFrame\UI-DialogBox-Background" edgeFile="Interface\DialogFrame\UI-DialogBox-Border" tile="true">
			<BackgroundInsets>
				<AbsInset left="11" right="12" top="12" bottom="11" />
			</BackgroundInsets>
			<TileSize>
				<AbsValue val="32" />
			</TileSize>
			<EdgeSize>
				<AbsValue val="32" />
			</EdgeSize>
		</Backdrop>
		<Layers>
			<Layer>
				<Texture name="$parentTitleBorder" file="Interface\DialogFrame\UI-DialogBox-Header">
					<Size>
						<AbsDimension x="160" y="32" />
					</Size>
					<Anchors>
						<Anchor point="TOP">
							<Offset>
								<AbsDimension x="0" y="5" />
							</Offset>
						</Anchor>
					</Anchors>
					<TexCoords left="0.2" right="0.8" top="0" bottom="0.6" />
				</Texture>
				<Texture name="$parentToggleBorder" file="Interface\AddOns\ButtonForge\Images\ToggleBorder.tga">
					<Size>
						<AbsDimension x="26" y="26" />
					</Size>
					<Anchors>
						<Anchor point="TOPRIGHT">
							<Offset>
								<AbsDimension x="0" y="0" />
							</Offset>
						</Anchor>
					</Anchors>
					<TexCoords left="0" right="0.8125" top="0" bottom="0.8125" />
				</Texture>
				<FontString name="$parentTitleString" font="Fonts\FRIZQT__.TTF" text="Button Forge">
					<Size>
						<AbsDimension x="140" y="0" />
					</Size>
					<Anchors>
						<Anchor point="TOP">
							<Offset>
								<AbsDimension x="0" y="-4" />
							</Offset>
						</Anchor>
					</Anchors>
					<FontHeight>
						<AbsValue val="12" />
					</FontHeight>
					<Color r="1" g="0.8196079" b="0" />
					<Shadow>
						<Color r="0" g="0" b="0" />
						<Offset>
							<AbsDimension x="1" y="-1" />
						</Offset>
					</Shadow>
				</FontString>
			</Layer>
		</Layers>
		<Frames>
		
			<!-- Create Bar, This button toggles create bar mode -->
			<CheckButton name="$parentCreateBar" inherits="ActionButtonTemplate">
				<Anchors>
					<Anchor point="TOPLEFT">
						<Offset>
							<AbsDimension x="20" y="-32" />
						</Offset>
					</Anchor>
				</Anchors>
				<Scripts>
					<OnLoad>
						_G[self:GetName().."Icon"]:SetTexture(BFConst.ImagesDir.."CreateBar.tga");
						self:RegisterForDrag("LeftButton", "RightButton");
						self.Tooltip = BFUtil.GetLocaleString("CreateBarTooltip");
					</OnLoad>
					<OnClick>
						-- Toggle CreateBar Mode
						BFUILib.ToggleCreateBarMode();
					</OnClick>
					<OnDragStart>
						BFCustomAction.SetCursor("createbarmode");
					</OnDragStart>
					<OnEnter>
						GameTooltip:SetOwner(self:GetParent(), "ANCHOR_TOPLEFT");
						GameTooltip:SetText(self.Tooltip, nil, nil, nil, nil, 1);
					</OnEnter>
					<OnLeave>
						GameTooltip_Hide();
					</OnLeave>
				</Scripts>
			</CheckButton>
			
			<!-- Destroy Bar, this button toggles destroy bar mode -->
			<CheckButton name="$parentDestroyBar" inherits="ActionButtonTemplate">
				<Anchors>
					<Anchor point="TOPLEFT">
						<Offset>
							<AbsDimension x="60" y="-32" />
						</Offset>
					</Anchor>
				</Anchors>
				<Scripts>
					<OnLoad>
						_G[self:GetName().."Icon"]:SetTexture(BFConst.ImagesDir.."DestroyBar.tga");
						self:RegisterForDrag("LeftButton", "RightButton");
						self.Tooltip = BFUtil.GetLocaleString("DestroyBarTooltip");
					</OnLoad>
					<OnClick>
						-- Toggle DestroyBar Mode
						BFUILib.ToggleDestroyBarMode();
					</OnClick>
					<OnDragStart>
						BFCustomAction.SetCursor("destroybarmode");
					</OnDragStart>
					<OnEnter>
						GameTooltip:SetOwner(self:GetParent(), "ANCHOR_TOPLEFT");
						GameTooltip:SetText(self.Tooltip, nil, nil, nil, nil, 1);
					</OnEnter>
					<OnLeave>
						GameTooltip_Hide();
					</OnLeave>
				</Scripts>
			</CheckButton>
			
			<!-- Advanced, this button controls display of the advanced configure UI -->
			<CheckButton name="$parentAdvanced" inherits="ActionButtonTemplate">
				<Anchors>
					<Anchor point="TOPLEFT">
						<Offset>
							<AbsDimension x="120" y="-32" />
						</Offset>
					</Anchor>
				</Anchors>
				<Scripts>
					<OnLoad>
						_G[self:GetName().."Icon"]:SetTexture(BFConst.ImagesDir.."AdvancedTools.tga");
						self:RegisterForDrag("LeftButton", "RightButton");
						self.Tooltip = BFUtil.GetLocaleString("AdvancedToolsTooltip");
					</OnLoad>
					<OnClick>
						-- Toggle Advanced Tools Mode
						BFUILib.ToggleAdvancedTools();
					</OnClick>
					<OnDragStart>
						BFCustomAction.SetCursor("advancedtoolsmode");
					</OnDragStart>
					<OnEnter>
						GameTooltip:SetOwner(self:GetParent(), "ANCHOR_TOPRIGHT");
						GameTooltip:SetText(self.Tooltip, nil, nil, nil, nil, 1);
					</OnEnter>
					<OnLeave>
						GameTooltip_Hide();
					</OnLeave>
				</Scripts>
			</CheckButton>

			<!-- Toggle Macro, this is a draggable button -->
			<CheckButton name="$parentConfigureAction" inherits="ActionButtonTemplate, SecureActionButtonTemplate">
				<Anchors>
					<Anchor point="TOPLEFT">
						<Offset>
							<AbsDimension x="160" y="-32" />
						</Offset>
					</Anchor>
				</Anchors>
				<Scripts>
					<OnLoad>
						_G[self:GetName().."Icon"]:SetTexture(BFConst.ImagesDir.."Configure.tga");
						self.Tooltip = BFUtil.GetLocaleString("ConfigureModePrimaryTooltip");
						self:RegisterForDrag("LeftButton", "RightButton");
						self:SetChecked(true);
						self:SetAttribute("type", "macro");
						self:SetAttribute("macrotext", "/click BFToolbarToggle");
					</OnLoad>
					<PostClick>
						self:SetChecked(true);
					</PostClick>
					<OnDragStart>
						BFCustomAction.SetCursor("configuremode");
					</OnDragStart>
					<OnEnter>
						GameTooltip:SetOwner(self:GetParent(), "ANCHOR_TOPRIGHT");
						GameTooltip:SetText(self.Tooltip, nil, nil, nil, nil, 1);
					</OnEnter>
					<OnLeave>
						GameTooltip_Hide();
					</OnLeave>
				</Scripts>
			</CheckButton>
			
			<!-- Toggle Right Click Self Cast -->
			<CheckButton name="$parentRightClickSelfCast" inherits="ActionButtonTemplate" hidden="true">
				<Anchors>
					<Anchor point="TOPLEFT">
						<Offset>
							<AbsDimension x="60" y="-74" />
						</Offset>
					</Anchor>
				</Anchors>
				<Scripts>
					<OnLoad>
						_G[self:GetName().."Icon"]:SetTexture(BFConst.ImagesDir.."RightClickSelfCast.tga");
						self:RegisterForDrag("LeftButton", "RightButton");
						self.Tooltip = BFUtil.GetLocaleString("RightClickSelfCastTooltip");
						self:SetScale(0.66);
						self:ClearAllPoints();
						self:SetPoint("TOPLEFT", self:GetParent(), "TOPLEFT", 20 / 0.66 + 40, -74 / 0.66);
					</OnLoad>
					<OnClick>
						-- Toggle Right Click Self Cast Mode
						BFUILib.ToggleRightClickSelfCast();
					</OnClick>
					<OnDragStart>
						BFCustomAction.SetCursor("rightclickselfcast");
					</OnDragStart>
					<OnEnter>
						GameTooltip:SetOwner(self:GetParent(), "ANCHOR_TOPLEFT");
						GameTooltip:SetText(self.Tooltip, nil, nil, nil, nil, 1);
					</OnEnter>
					<OnLeave>
						GameTooltip_Hide();
					</OnLeave>
				</Scripts>
			</CheckButton>
			
			<!-- Toggle - AKA Red X, this button gets set up to include secure snippets to handle both entering and exiting Button Forge Configure Mode -->
			<Button name="$parentToggle" inherits="SecureHandlerBaseTemplate, SecureHandlerClickTemplate">
				<Size>
					<AbsDimension x="32" y="32"/>
				</Size>
				<Anchors>
					<Anchor point="TOPRIGHT">
						<Offset>
							<AbsDimension x="5" y="5"/>
						</Offset>
					</Anchor>
				</Anchors>
				<NormalTexture file="Interface\Buttons\UI-Panel-MinimizeButton-Up"/>
				<PushedTexture file="Interface\Buttons\UI-Panel-MinimizeButton-Down"/>
				<HighlightTexture file="Interface\Buttons\UI-Panel-MinimizeButton-Highlight" alphaMode="ADD"/>
				<Scripts>
					<OnLoad>
						self:SetAttribute("_onclick", [[if (owner:GetParent():GetParent():IsShown()) then
														owner:GetParent():GetParent():Hide();
													else
														owner:GetParent():GetParent():Show();
													end]]);
					</OnLoad>
				</Scripts>
			</Button>
		</Frames>
	</Frame>
</Ui>
